volumes:
  outline-storage:
  outline-db:

services:
  outline:
    image: docker.getoutline.com/outlinewiki/outline:latest
    volumes:
      - outline-storage:/var/lib/outline/data:Z
    environment:
      SECRET_KEY: openssl rand -hex 32
      UTILS_SECRET: opensll rand -hex 32
      DATABASE_URL: postgres://user:pass@outline-db:5432/outline
      PGSSLMODE: disable
      REDIS_URL: redis://outline-redis:6379
      # URL should point to the fully qualified, publicly accessible URL. If using a
      # proxy the port in URL and PORT may be different.
      URL: https://800cpttest.sears.dev
      PORT: 3000
      FILE_STORAGE: local
      FILE_STORAGE_LOCAL_ROOT_DIR: /var/lib/outline/data
      FILE_STORAGE_UPLOAD_MAX_SIZE: 262144000
      # To configure generic OIDC auth, you'll need some kind of identity provider.
      # See documentation for whichever IdP you use to acquire the following info:
      # Redirect URI is https://<URL>/auth/oidc.callback
      OIDC_CLIENT_ID:
      OIDC_CLIENT_SECRET:
      OIDC_AUTH_URI:
      OIDC_TOKEN_URI:
      OIDC_USERINFO_URI:
      OIDC_LOGOUT_URI:
      # Specify which claims to derive user information from
      # Supports any valid JSON path with the JWT payload
      OIDC_USERNAME_CLAIM: preferred_username
      # Display name for OIDC authentication
      OIDC_DISPLAY_NAME: OpenID Connect
      # Space separated auth scopes
      OIDC_SCOPES: openid profile email
      # Auto-redirect to https in production. The default is true but you may set to
      # false if you can be sure that SSL is terminated at an external loadbalancer.
      FORCE_HTTPS: false
      ENABLE_UPDATES: false
      # How many processes should be spawned. As a reasonable rule divide your servers
      # available memory by 512 for a rough estimate
      WEB_CONCURRENCY: 4
      # You can remove this line if your reverse proxy already logs incoming http
      # requests and this ends up being duplicative
      DEBUG: http
      # Configure lowest severity level for server logs. Should be one of
      # error, warn, info, http, verbose, debug and silly
      LOG_LEVEL: info
      DEFAULT_LANGUAGE: en_US
      # Optionally enable rate limiter at application web server
      RATE_LIMITER_ENABLED: true
      RATE_LIMITER_REQUESTS: 1000
      RATE_LIMITER_DURATION_WINDOW: 60
    depends_on:
      - database
      - redis
    restart: unless-stopped

  database:
    image: docker.io/library/postgres:latest
    volumes:
      - outline-db:/var/lib/postgresql/data:Z
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "outline", "-U", "user"]
      interval: 30s
      timeout: 20s
      retries: 3
    environment:
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "pass"
      POSTGRES_DB: "outline"
    restart: unless-stopped

  redis:
    image: docker.io/library/redis:latest
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 3
    restart: unless-stopped
