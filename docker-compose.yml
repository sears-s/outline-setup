networks:
  proxy:
  traefik:
  outline:

x-common-service: &common-service
  restart: unless-stopped
  # Uncomment for older docker version
  # security_opt:
    # - seccomp=unconfined

x-common-healthcheck: &common-healthcheck
  interval: 10s
  timeout: 10s
  retries: 5
  start_period: 5s

services:
  socket-proxy:
    <<: *common-service
    image: ghcr.io/tecnativa/docker-socket-proxy:${SOCKET_PROXY_VERSION}
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:2375/version"]
      <<: *common-healthcheck
    privileged: true
    environment:
      CONTAINERS: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro,Z
    networks:
      - proxy

  traefik:
    <<: *common-service
    image: docker.io/library/traefik:${TRAEFIK_VERSION}
    depends_on:
      - socket-proxy
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      <<: *common-healthcheck
    command:
      - --accesslog=true
      - --accesslog.filepath=/access.log
      - --ping=true
      - --providers.docker=true
      - --providers.docker.endpoint=tcp://socket-proxy:2375
      - --providers.docker.exposedByDefault=false
      - --providers.docker.defaultRule=Host(`{{index .Labels "com.docker.compose.service"}}.${DOMAIN}`)
      # Uncomment and put in correct traefik network name if experiencing gateway timeouts
      #- --providers.docker.network=outline-setup_traefik
      - --entrypoints.https.address=:${PORT}
      - --entrypoints.https.asdefault=true
      - --entrypoints.https.http.tls.domains[0].main=${DOMAIN}
      - --entrypoints.https.http.tls.domains[0].sans=*.${DOMAIN}
      - --global.checknewversion=false
      - --log=true
      - --log.level=INFO
    volumes:
      - ${DATA_DIR}/access.log:/access.log:Z
    networks:
      - traefik
      - proxy
    ports:
      - ${PORT}:${PORT}

  outline:
    <<: *common-service
    image: docker.getoutline.com/outlinewiki/outline:${OUTLINE_VERSION}
    depends_on:
      - outline-db
      - outline-redis
      - drawio
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:3000"]
      <<: *common-healthcheck
    environment:
      URL: https://outline.${DOMAIN}:${PORT}
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@outline-db:5432/${POSTGRES_DB}
      PGSSLMODE: disable
      REDIS_URL: redis://outline-redis:6379
      FILE_STORAGE: local
      FILE_STORAGE_LOCAL_ROOT_DIR: /var/lib/outline/data
      FILE_STORAGE_UPLOAD_MAX_SIZE: 262144000
      OIDC_DISPLAY_NAME: Keycloak
      OIDC_AUTH_URI: ${KEYCLOAK_URL}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/auth
      OIDC_TOKEN_URI: ${KEYCLOAK_URL}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/token
      OIDC_USERINFO_URI: ${KEYCLOAK_URL}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/userinfo
      OIDC_LOGOUT_URI: ${KEYCLOAK_URL}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/logout
      OIDC_CLIENT_ID: ${KEYCLOAK_CLIENT_ID}
      OIDC_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}
      OIDC_USERNAME_CLAIM: ${KEYCLOAK_USERNAME_CLAIM}
      OIDC_SCOPES: ${KEYCLOAK_SCOPES}
      FORCE_HTTPS: "false"
      ENABLE_UPDATES: "false"
      DEFAULT_LANGUAGE: en_US
      NODE_ENV: production
      NODE_TLS_REJECT_UNAUTHORIZED: 0
      RATE_LIMITER_ENABLED: "false"
      LOG_LEVEL: ${OUTLINE_LOG_LEVEL}
      WEB_CONCURRENCY: ${OUTLINE_WEB_CONCURRENCY}
      SECRET_KEY: ${OUTLINE_SECRET_KEY}
      UTILS_SECRET: ${OUTLINE_UTILS_SECRET}
    volumes:
      - ${DATA_DIR}/outline-storage:/var/lib/outline/data:Z
    labels:
      traefik.enable: true
    networks:
      - traefik
      - outline

  outline-db:
    <<: *common-service
    image: docker.io/library/postgres:${POSTGRES_VERSION}
    healthcheck:
      test:
        ["CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
      <<: *common-healthcheck
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ${DATA_DIR}/outline-db:/var/lib/postgresql/data:Z
    networks:
      - outline

  outline-redis:
    <<: *common-service
    image: docker.io/library/redis:${REDIS_VERSION}
    healthcheck:
      test: ["CMD-SHELL", "[ $$(redis-cli ping) = 'PONG' ]"]
      <<: *common-healthcheck
    networks:
      - outline

  drawio:
    <<: *common-service
    image: docker.io/jgraph/drawio:${DRAWIO_VERSION}
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:8080"]
      <<: *common-healthcheck
    environment:
      DRAWIO_SELF_CONTAINED: 1
      DRAWIO_USE_HTTP: 1
      DRAWIO_BASE_URL: https://drawio.${DOMAIN}:${PORT}
      DRAWIO_LIGHTBOX_URL: https://drawio.${DOMAIN}:${PORT}
      DRAWIO_VIEWER_URL: https://drawio.${DOMAIN}:${PORT}/viewer.min.js
    labels:
      traefik.enable: true
    networks:
      - traefik
